{"data":{"allMdx":{"nodes":[{"id":"168c60a6-92cc-5044-a4b2-557d959cc333","excerpt":"The Kotlin Foundation sponsored 4 projects for the Google Summer of Code 2023 and we are excited to announce the completion of the KFlogger project, an experimental Kotlin Multiplatform version of Google's Flogger logging library! The contributor to this project was Giancarlo Buenaflor, a computer science undergraduate, and the mentor was Mark Mann, a Kotlin Multiplatform engineer at Google. Introduction\n\nFlogger, Google's default logging framework for JVM projects, opens up new opportunities for efficient cross-platform logging. The KFlogger project aims to enable the integration of Flogger into iOS and JVM, benefitting from the multiplatform capabilities of Kotlin.\n\nKFlogger incorporates the existing JVM Flogger codebase as a Java module, preserving its core functionality. The JVM implementation remains largely untouched and is directly actualized through the actual typealias mechanism. On the iOS side, KFlogger introduces a default logging backend based on OSLog.\n\nHere is a demo of this working on Android and iOS:\n\nGetting Started\n\nTo use KFlogger, add the following dependency to your commonMain sourceSet:\n\n// Find the latest version \n// on https://mvnrepository.com/artifact/com.giancarlobuenaflor/kflogger\nimplementation(\"com.buenaflor:kflogger:0.0.3\")\n\n\nThis will allow you to start simple logging. Add the KFluentLogger instance to your class and then you can start logging through your common code:\n\nimport com.giancarlobuenaflor.kflogger.KFluentLogger\n\nclass LoggingClass {\n    private val logger = KFluentLogger.forEnclosingClass()\n    \n    fun log() {\n        logger.atWarning().log(\"string: %s\", \"example\")\n        logger.atWarning().log(\"integer: %d:\", 1)\n        logger.atWarning().log(\"float: %f\", 1.0f)\n        logger.atWarning().log(\"%d%% %s\", 100, \"chance\")\n    }\n}\n\n\nThe source is in a GitHub repository and we'd love your feedback and contributions!\n\nThank you Giancarlo and Mark for helping make Kotlin Multiplatform even better!","fields":{"slug":"/news/gsoc-2023-kflogger/"},"frontmatter":{"date":"January 08, 2024","title":"Google Summer of Code 2023 - KFlogger (Kotlin Multiplatform Flogger)","spoilerSize":null}},{"id":"35934900-85cb-523f-b9dd-f5f8a1ee9b2b","excerpt":"The Kotlin Foundation sponsored 4 projects for the Google Summer of Code 2023, and we are excited to announce the completion of the Eclipse Gradle Kotlin Script Support project! Gradle, a Kotlin Foundation member, provided mentoring support for this project, and we'd like to share details about the project. The contributor to this project was Nikolai Vladimirov, a third-year student from Constructor University, and the mentor was Donát Csikós, a Senior Software Engineer at Gradle. The project aimed to bring support for Gradle Kotlin Scripts (.kts) to the Eclipse IDE.\n\nThe initial goal was to improve user interaction with Gradle Kotlin scripts inside the Eclipse IDE. The goal was to implement the following functionality:\n\nSyntax highlighting for Kotlin scripts Content assistance Go-to-definition Accurate diagnostics for syntax errors Signature help Hovering\n\nNikolai successfully delivered these features by implementing support for Kotlin scripts based on the existing kotlin-language-server project, creating a new system to separate compilation environments for each build script. Here are examples of each feature:\n\nSyntax highlighting for .kts scripts\n\nContent assistance\n\nGo-to-definition\n\nAccurate Diagnostics for syntax errors\n\nSignature help\n\nHovering\n\nInstallation\n\nThe new features are not yet production-ready, and it currently does not work on Windows. Consequently, they are delivered as optional installables. You can find them in the latest update sites under the Buildship Extras - Incubating category.\n\nNext Steps\n\nIf you'd like to get involved with improving the Eclipse Kotlin Gradle Script support, there are two parts:\n\nEclipse plugin: The plugin is part of the Buildship project. The implementation is in the org.eclipse.buildship.kotlindsl.provider subproject. Language server: The IDE-agnostic components are implemented in this repository in the GSoC-work branch.\n\nThe remaining tasks are to add a couple of minor features and incrementally improve the reliability, stability, and performance of this plugin.\n\nWe are grateful for Nikolai and Donát's contributions to making Kotlin better for developers!","fields":{"slug":"/news/gsoc-2023-eclipse-gradle-kotlin/"},"frontmatter":{"date":"January 05, 2024","title":"Google Summer of Code 2023 – Eclipse Gradle Kotlin Script Support","spoilerSize":null}}]}}}