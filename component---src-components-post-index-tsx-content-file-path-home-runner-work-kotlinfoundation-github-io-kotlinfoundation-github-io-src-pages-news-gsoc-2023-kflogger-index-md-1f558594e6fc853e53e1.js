"use strict";(self.webpackChunkkotlinfoundation_github_io=self.webpackChunkkotlinfoundation_github_io||[]).push([[719],{41221:function(e,t,n){n.r(t),n.d(t,{default:function(){return p}});var o=n(67294),l=n(11151);function r(e){const t=Object.assign({p:"p",a:"a",h2:"h2",code:"code",pre:"pre"},(0,l.ah)(),e.components),{YoutubePlayer:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("YoutubePlayer",!0),o.createElement(o.Fragment,null,o.createElement(t.p,null,"The Kotlin Foundation sponsored 4 projects for the Google Summer of Code 2023 and we are excited to announce the completion of the KFlogger project, an experimental Kotlin Multiplatform version of ",o.createElement(t.a,{href:"https://github.com/google/flogger"},"Google's Flogger logging library"),"! The contributor to this project was ",o.createElement(t.a,{href:"https://www.linkedin.com/in/giancarlo-buenaflor/"},"Giancarlo Buenaflor"),", a computer science undergraduate, and the mentor was Mark Mann, a Kotlin Multiplatform engineer at Google."),"\n",o.createElement(t.h2,{id:"introduction"},"Introduction"),"\n",o.createElement(t.p,null,"Flogger, Google's default logging framework for JVM projects, opens up new opportunities for efficient cross-platform logging. The KFlogger project aims to enable the integration of Flogger into iOS and JVM, benefitting from the multiplatform capabilities of Kotlin."),"\n",o.createElement(t.p,null,"KFlogger incorporates the existing JVM Flogger codebase as a Java module, preserving its core functionality. The JVM implementation remains largely untouched and is directly actualized through the actual typealias mechanism. On the iOS side, KFlogger introduces a default logging backend based on OSLog."),"\n",o.createElement(t.p,null,"Here is a demo of this working on Android and iOS:"),"\n",o.createElement(n,{id:"hkyL-Lhkla8"}),"\n",o.createElement(t.h2,{id:"getting-started"},"Getting Started"),"\n",o.createElement(t.p,null,"To use KFlogger, add the following dependency to your ",o.createElement(t.code,null,"commonMain")," sourceSet:"),"\n",o.createElement(t.pre,null,o.createElement(t.code,{className:"language-kotlin"},'// Find the latest version \n// on https://mvnrepository.com/artifact/com.giancarlobuenaflor/kflogger\nimplementation("com.buenaflor:kflogger:0.0.3")\n')),"\n",o.createElement(t.p,null,"This will allow you to start simple logging.\nAdd the ",o.createElement(t.code,null,"KFluentLogger")," instance to your class and then you can start logging through your common code:"),"\n",o.createElement(t.pre,null,o.createElement(t.code,{className:"language-kotlin"},'import com.giancarlobuenaflor.kflogger.KFluentLogger\n\nclass LoggingClass {\n    private val logger = KFluentLogger.forEnclosingClass()\n    \n    fun log() {\n        logger.atWarning().log("string: %s", "example")\n        logger.atWarning().log("integer: %d:", 1)\n        logger.atWarning().log("float: %f", 1.0f)\n        logger.atWarning().log("%d%% %s", 100, "chance")\n    }\n}\n')),"\n",o.createElement(t.p,null,"The source is in a ",o.createElement(t.a,{href:"https://github.com/buenaflor/KFlogger"},"GitHub repository")," and we'd love your feedback and contributions!"),"\n",o.createElement(t.p,null,"Thank you Giancarlo and Mark for helping make Kotlin Multiplatform even better!"))}var a=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,l.ah)(),e.components);return t?o.createElement(t,e,o.createElement(r,e)):r(e)};var i=n(94184),c=n.n(i),u=n(11883),g=n(8902),s=n(25058),d=n(90025),m=n(99787),f=n(85893);function h(e){var t,n;let{children:o,...l}=e;const r=(0,g.K)(),{location:a}=l,{allMdx:{nodes:i}}=(0,u.useStaticQuery)("914412448"),h=i.find((e=>(0,u.withPrefix)(e.fields.slug)===a.pathname)),{title:p,date:v}=h.frontmatter,y=(null===(t=h.frontmatter.socialImage)||void 0===t?void 0:t.publicURL)||(null===(n=h.frontmatter.coverImage)||void 0===n?void 0:n.publicURL);return l.pageContext.frontmatter={...l.pageContext.frontmatter,contactUs:!0},(0,f.jsxs)(s.ZP,{...l,socialImage:y,children:[(0,f.jsx)("p",{className:c()(r("ktl-text-3"),"ktl-text--gray",m.h),children:v}),(0,f.jsx)("h1",{className:c()("ktf-h2 ktf-h3--mm",m.T),children:p}),(0,f.jsx)(d.U,{children:o})]})}function p(e){return o.createElement(h,e,o.createElement(a,e))}},25058:function(e,t,n){n.d(t,{Ar:function(){return f}});var o=n(94184),l=n.n(o),r=n(97812),a=(n(43999),n(17077)),i=n(31866),c=n(90025),u=n(3962),g=n(21772),s=n(33520),d=n(85893);let m=function(e){return e.Regular="regular",e.Narrow="narrow",e.Wide="wide",e}({});function f(e){let{children:t,location:n,title:o,layout:c,socialImage:f=null,contactUs:p,greyLayout:v}=e;const y=c===m.Wide?t:(0,d.jsx)(h,{className:m.Narrow===c&&s.Ln,children:t});return(0,d.jsxs)(r.L.Provider,{value:n,children:[(0,d.jsx)(a.H,{title:o,image:f}),(0,d.jsx)(i.h,{}),(0,d.jsxs)("div",{className:l()(s.bK,{[s.G3]:Boolean(v)}),children:[y,p&&(0,d.jsx)(u.U,{}),(0,d.jsx)(g.$,{})]})]})}function h(e){let{className:t,children:n}=e;return(0,d.jsx)("div",{className:l()(t,"ktl-layout ktl-layout--center ktl-layout--spacing"),children:n})}function p(e){let{children:t,...n}=e;return(0,d.jsx)(f,{...n,children:(0,d.jsx)(c.U,{children:t})})}t.ZP=function(e){var t,n,o,l,r,a,i;let{pageContext:c,...u}=e;const g=null==c||null===(t=c.frontmatter)||void 0===t?void 0:t.title,s=null!==(n=null==c||null===(o=c.frontmatter)||void 0===o?void 0:o.layout)&&void 0!==n?n:m.Narrow,f=null!==(l=null==c||null===(r=c.frontmatter)||void 0===r?void 0:r.contactUs)&&void 0!==l&&l,h=null!==(a=null==c||null===(i=c.frontmatter)||void 0===i?void 0:i.greyLayout)&&void 0!==a&&a;return(0,d.jsx)(p,{...u,title:g,layout:s,contactUs:f,greyLayout:h})}},99787:function(e,t,n){n.d(t,{T:function(){return l},h:function(){return o}});var o="Post-module--date--f5c2e",l="Post-module--title--44f76"}}]);
//# sourceMappingURL=component---src-components-post-index-tsx-content-file-path-home-runner-work-kotlinfoundation-github-io-kotlinfoundation-github-io-src-pages-news-gsoc-2023-kflogger-index-md-1f558594e6fc853e53e1.js.map