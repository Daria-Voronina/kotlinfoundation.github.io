{"version":3,"file":"component---src-pages-structure-index-tsx-55a0c36e78afebc6a62d.js","mappings":"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","sources":["webpack://kotlinfoundation.github.io/./src/components/Person/Person.module.css","webpack://kotlinfoundation.github.io/./src/components/Person/index.tsx","webpack://kotlinfoundation.github.io/./src/components/Structure/Department.tsx","webpack://kotlinfoundation.github.io/./src/components/Structure/index.tsx","webpack://kotlinfoundation.github.io/./src/components/Structure/structure.module.css","webpack://kotlinfoundation.github.io/./src/pages/structure/style.module.css","webpack://kotlinfoundation.github.io/./src/pages/structure/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var person = \"Person-module--person--OSsez\";\nexport var info = \"Person-module--info--dON-M\";\nexport var photoWrap = \"Person-module--photoWrap--p68KN\";\nexport var photo = \"Person-module--photo--JOxyo\";\nexport var person_size_xl = \"Person-module--person_size_xl--M4k2-\";\nexport var photoWrap_mascot_1 = \"Person-module--photoWrap_mascot_1--483DH\";\nexport var photoWrap_mascot_2 = \"Person-module--photoWrap_mascot_2--HZU6Z\";\nexport var photoWrap_mascot_3 = \"Person-module--photoWrap_mascot_3--AKh0-\";\nexport var photoWrap_mascot_4 = \"Person-module--photoWrap_mascot_4--QqPV8\";","import cn from \"classnames\";\nimport * as style from \"./Person.module.css\";\nimport {graphql, StaticQuery} from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nexport const Person = ({ mascot = null, size= null, className = null, name, company }) => <StaticQuery\n    query={graphql`\n      query {\n        images: allFile(filter: {relativePath: {glob: \"persons/*.png\"}}) {\n          edges {\n            node {\n              relativePath\n                name\n                childImageSharp {\n                  gatsbyImageData(layout: CONSTRAINED)\n                }\n              }\n            }\n          }\n        }\n    `}\n    render={({ images }) => {\n        const file = images.edges.find(({node}) => node.relativePath === `persons/${name}.png`);\n\n        return <div className={cn(style.person, 'vcard', className, {\n            [style[`person_size_${size}`]]: Boolean(size),\n        })}>\n            <div className={cn(style.photoWrap, {\n                [style[`photoWrap_mascot_${mascot}`]]: Boolean(mascot),\n            })}>\n                <GatsbyImage\n                    className={style.photo}\n                    image={file.node.childImageSharp.gatsbyImageData}\n                    alt={`${name}'s face.`}\n                />\n            </div>\n            <p className={style.info}>\n                <span className={cn('ktl-h4', 'n')}>{name}</span>\n                <span className={cn('ktl-text-2', 'org')}>{company}</span>\n            </p>\n        </div>\n    }}\n/>;\n","import cn from \"classnames\";\nimport { Person } from \"../Person\";\nimport * as style from \"./structure.module.css\";\n\nexport const Department = ({ hero = false, name, members, children }) => {\n    const persons = members\n        ? Array.isArray(members) ? members : [ members ]\n        : [];\n\n    return (\n        <div className={cn(style.row, {\n            [style.hero]: Boolean(hero),\n        })}>\n            <h2 className={cn('ktl-h2', style.title)}>{name}</h2>\n\n            <ul className={style.members}>{persons.map((person, i) => (\n                <li key={i} className={style.member}>\n                    <Person { ...(hero ? { size: 'xl', mascot: i+1 } : {})} {...person}/>\n                </li>\n            ))}</ul>\n\n            <div className={cn('ktl-text-1', style.description)}>\n                {children}\n            </div>\n        </div>\n    );\n}\n\n","import { HTMLAttributes } from \"react\";\nimport cn from \"classnames\";\nimport * as style from \"./structure.module.css\";\nimport { Department } from \"./Department\";\n\nexport const Structure = ({className, ...props} : HTMLAttributes<HTMLDivElement>) => <section\n    {...props}\n    className={cn(style.root, className)}\n/>;\n\nStructure.Department = Department;\n","// extracted by mini-css-extract-plugin\nexport var root = \"structure-module--root---3Fzb\";\nexport var row = \"structure-module--row--6z-JC\";\nexport var members = \"structure-module--members--F3zRU\";\nexport var title = \"structure-module--title--R7GRg\";\nexport var description = \"structure-module--description--4Vyi5\";\nexport var hero = \"structure-module--hero--pWm-9\";\nexport var member = \"structure-module--member--qaJ5x\";","// extracted by mini-css-extract-plugin\nexport var list = \"style-module--list--xS67D\";","import cn from \"classnames\";\nimport { Layout } from \"../../components/Layout\";\nimport { Structure } from \"../../components/Structure\";\n\nimport * as styles from \"./style.module.css\";\nimport { LinkStandalone } from \"../../components/Link\";\n\nexport default function StructurePage() {\n    return (\n        <Layout title={'Structure'}>\n            <div className={'ktl-container'}>\n                <h1 className={'ktl-h1 ktl-offset-bottom-l ktl-offset-top-xl'}>Structure</h1>\n\n                <p className={'ktl-text-1 ktl-offset-bottom-l'}>The Kotlin Foundation is a nonprofit nonstock corporation registered in the state of Delaware, USA.</p>\n\n                <Structure className={'ktl-offset-bottom-xxl'}>\n                    <Structure.Department\n                        hero\n                        name={'Board of Directors'}\n                        members={[\n                            { name: 'Maxim Shafirov', company: 'JetBrains' },\n                            { name: 'Roman Elizarov', company: 'JetBrains' },\n                            { name: 'Grace Kloba', company: 'Google' },\n                            { name: 'Anwar Ghuloum', company: 'Google' },\n                        ]}\n                    >\n                        The Foundation is governed by the Board of Directors that makes all decisions by voting. The Board appoints the Lead Language Designer and the members of the Language Committee.\n                    </Structure.Department>\n\n                    <Structure.Department\n                        name={'President'}\n                        members={{ name: 'Maxim Shafirov', company: 'JetBrains' }}\n                    >\n                        Elected by the Board of Directors as well. The President acts as the chief officer of the Foundation and supervises its affairs and operations.\n                    </Structure.Department>\n\n                    <Structure.Department\n                        name={'Secretary'}\n                        members={{ name: 'Jeffrey van Gogh', company: 'Google' }}\n                    >\n                        The Secretary keeps record of all meetings of the Board and its committees, and keeps track of membership and notices to the members, directors and third parties.\n                    </Structure.Department>\n\n                    <Structure.Department\n                        name={'Lead Language Designer'}\n                        members={{ name: 'Roman Elizarov', company: 'JetBrains' }}\n                    >\n                        This person is in charge of all decisions regarding the development of the project and evolution of the language. The Foundation appoints the Lead Language Designer, but does not directly make decisions about the course of the project.\n                    </Structure.Department>\n\n                    <Structure.Department\n                        name={'Language Committee'}\n                        members={[\n                            { name: 'Roman Elizarov', company: 'JetBrains' },\n                            { name: 'Jeffrey van Gogh', company: 'Google' },\n                        ]}\n                    >\n                        A special Language Committee appointed by the Foundation reviews the changes proposed by the Lead Language Designer and has the power to reject incompatible changes or require certain deprecation procedures to be carried out.\n\n                        <ul className={cn(styles.list, 'rs-text-2')}>\n                            <li className={'ktl-offset-bottom-xs'}>\n                                <LinkStandalone href=\"/language-committee-guidelines/\">Language Committee</LinkStandalone>\n                            </li>\n                            <li className={'ktl-offset-bottom-xs'}>\n                                <LinkStandalone href=\"/submitting-incompatible-changes/\">Submitting Incompatible changes</LinkStandalone>\n                            </li>\n                        </ul>\n                    </Structure.Department>\n\n                    <Structure.Department\n                        name={'Trademark Committee'}\n                        members={[\n                            { name: 'Hadi Hariri', company: 'JetBrains' },\n                            { name: 'Jan Cichy', company: 'JetBrains' },\n                            { name: 'Alina Dolgikh', company: 'JetBrains' },\n                            { name: 'Hilary Richardson', company: 'Google' },\n                            { name: 'Isabella Fiterman', company: 'Google' },\n                        ]}\n                    >\n                        The Trademark Committee is responsible for managing the proper use of the Kotlin trademark, which includes its general purpose use as outlined by the Trademark Usage Guidelines, as well as handling specific use-cases that may fall out of the norm. The Trademark Committee reports directly to the Foundation’s board of directors, albeit mostly has autonomy on matters regarding trademarks.\n\n                        <ul className={cn(styles.list, 'rs-text-2')}>\n                            <li className={'ktl-offset-bottom-xs'}>\n                                <LinkStandalone href=\"/guidelines/\">Kotlin Brand Usage guidelines</LinkStandalone>\n                            </li>\n                        </ul>\n                    </Structure.Department>\n\n                    <Structure.Department\n                        name={'Operating Committee'}\n                        members={[\n                            { name: 'Jeffrey van Gogh', company: 'Google' },\n                            { name: 'Hadi Hariri', company: 'JetBrains' },\n                            { name: 'John Pampuch', company: 'Google' },\n                            { name: 'Egor Tolstoy', company: 'JetBrains' },\n                        ]}\n                    >\n                        The Operating Committee goal is to ensure the functioning of the Kotlin Foundation by executing different operational tasks. The Operating Committee reports directly to the Foundation’s board of directors.\n                    </Structure.Department>\n                </Structure>\n            </div>\n        </Layout>\n    );\n}\n"],"names":["person","info","photoWrap","photo","person_size_xl","photoWrap_mascot_1","photoWrap_mascot_2","photoWrap_mascot_3","photoWrap_mascot_4","Person","mascot","size","className","name","company","StaticQuery","query","render","file","images","edges","find","node","relativePath","cn","style","Boolean","G","image","childImageSharp","gatsbyImageData","alt","Structure","props","Department","hero","members","children","persons","Array","isArray","map","i","list","StructurePage","Layout","title","styles","Link","href"],"sourceRoot":""}